{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game/game.component.html","./src/app/game/game.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  ngOnInit(): void {\n  }\n\n  title = 'zebra-demo';\n}\n\n","<div class=\"main-container\">\n  <header class=\"header header-4\">\n    <div class=\"branding\">\n      <span class=\"title\">Zebra4J Demos</span>\n    </div>\n    <div class=\"header-nav\">\n      <a href=\"javascript://\" class=\"active nav-link nav-text\">Question Puzzle</a>\n      <a href=\"javascript://\" class=\"nav-link nav-text\">Basic Puzzle</a>\n    </div>\n    <div class=\"settings\">\n      <a href=\"https://github.com/murfffi/zebra4j\" class=\"nav-link nav-icon\" target=\"_blank\">\n        <img src=\"assets/github.svg\" class=\"logo\" style=\"width: 1.5rem;\"/>\n      </a>\n    </div>    \n  </header>\n  <div class=\"content-container\">\n    <div class=\"content-area\">\n      <router-outlet></router-outlet>\n    </div>\n    <div id=\"puzzle\"></div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ClarityModule } from '@clr/angular';\nimport { RouterModule } from \"@angular/router\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { GameComponent } from './game/game.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ClarityModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot([\n      { path: \"\", component: GameComponent },\n    ])    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<p>Facts:</p>\n<ul class=\"list compact\">\n  <li *ngFor=\"let fact of currentPuzzle.facts\">{{ fact }}</li>\n</ul>\n<p>{{ currentPuzzle.question }}</p>\n<select clrSelect name=\"answerSelect\" (change)=\"select($event.target.value)\" *ngIf=\"!completed\">\n  <option value=\"\">Please select ...</option>\n  <option *ngFor=\"let answer of currentPuzzle.answerOptions\" value=\"{{ answer }}\">{{ answer }}</option>\n</select>\n<div *ngIf=\"completed\">\n  <p>Selected: {{ selected }}</p>\n  <p>Correct: {{ currentPuzzle.answer }}</p>\n  <button class=\"btn btn-primary\" (click)=\"reset()\">Try Another Puzzle</button>\n</div>\n<p *ngIf=\"generating\">\n  <clr-spinner [clrMedium]=\"true\"></clr-spinner>\n</p>\n<p>Seed for generating this puzzle: {{ currentPuzzle.seed }} (for debugging)</p>\n","import { Component, OnInit } from '@angular/core';\n\ndeclare function main(): any;\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css'],\n})\nexport class GameComponent implements OnInit {\n  currentPuzzle: PuzzleDescription;\n  selected: string;\n\n  generating = false;\n  completed = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    main();\n    this.generateAsync();   \n  }\n\n  select(value: string): void {\n    this.completed = true;\n    this.selected = value;\n    console.log(\"Completed.\");\n  }\n\n  reset() : void {\n    this.completed = false;\n    this.selected = '';\n    this.generateAsync();\n  }\n\n  generate() : PuzzleDescription {\n    let puzzleJson = window[\"question\"](3) as string;\n    return JSON.parse(puzzleJson) as PuzzleDescription;    \n  }\n\n  async generateAsync() {\n    this.generating = true;\n    const myPromise = new Promise<PuzzleDescription>((resolve, reject) => {\n      setTimeout(() => {\n        resolve(this.generate());\n      }, 100);\n    });\n    this.currentPuzzle = await myPromise;\n    this.generating = false;   \n  }\n\n}\n\nexport interface PuzzleDescription {\n  facts: Array<string>;\n  question: string;\n  answerOptions: Array<string>;\n  answer: string;\n  seed: number;\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}